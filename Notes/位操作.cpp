// 利用或操作 | 和空格将英文字符转换为小写
('A' | ' ') == 'a'
// 利用与操作 & 和下划线将英文字符转换为大写
('b' & '_') == 'B'
// 利用异或操作 ^ 和空格进行英文字符大小写互换
('d' ^ ' ') == 'D'
('D' ^ ' ') == 'd'
// 不用临时变量交换2个数字
int a = 1, b = 2;
a ^= b;
b ^= a;
a ^= b;// 现在 a = 2, b = 1
// 加一
int n = 1;
n = -~n; // 现在 n = 2
// 减一
int n = 2;
n = ~-n; // 现在 n = 1
// 利用补码编码，判断两个数是否异号
int x = -1, y = 2;
bool f = ((x ^ y) < 0); // true

int x = 3, y = 2;
bool f = ((x ^ y) < 0); // false
// 模运算 % 对计算机来说其实是一个比较昂贵的操作，所以我们可以用 & 运算来求余数
// 还有一个好处：即使是index--，这时%会不管用，但是&依然正常工作。
int[] arr = {1,2,3,4};
int index = 0;
while (true) {
    // 在环形数组中转圈
    print(arr[index & (arr.length - 1)]);
    index++;
} // 输出：1,2,3,4,1,2,3,4,1,2,3,4...

// 常用操作之：n & (n-1)可以消除二进制中的最后一个1
// 汉明重量用到，查二进制中有几个1，leetcode 191

// 一个数如果是 2 的指数，那么它的二进制表示一定只含有一个 1

// 异或运算： a ^ a == 0    a ^ 0 == a